apiVersion: v1
kind: ServiceAccount
metadata:
  name:  replicator-account
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: replicator-role
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: akka-simple-cluster
subjects:
- kind: ServiceAccount
  name:  replicator-account
  namespace: default
roleRef:
  kind: ClusterRole
  name: replicator-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: replicator
spec:
  selector:
    matchLabels:
      app: replicator
  replicas: 3 # tells deployment to run 2 pods matching the template
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: replicator
    spec:
      serviceAccount: replicator-account
      containers:
      - name: replicator
        env:
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
        imagePullPolicy: Never
        image: replicator:1.3
        readinessProbe:
          tcpSocket:
            port: 8080
        livenessProbe:
          tcpSocket:
            port: 8080
        ports:
        - containerPort: 8080
          name: api
        - containerPort: 8081
          name: mgmt
        - containerPort: 2552
          name: akka
---
apiVersion: v1
kind: Service
metadata:
  name: replicator
spec:
  type: NodePort
  selector:
    app: replicator
  ports:
  - protocol: TCP
    name: mgmt
    port: 8081
    targetPort: mgmt
  - protocol: TCP
    name: api
    port: 8080
    targetPort: api